[package]
name = "harmony_rust_sdk"
version = "0.8.0"
authors = ["Yusuf Bera Ertan <y.bera003.06@protonmail.com>"]
edition = "2021"
license = "MIT"
description = "Rust library to work with the Harmony chat protocol."
repository = "https://github.com/harmony-development/harmony_rust_sdk"
homepage = "https://github.com/harmony-development/harmony_rust_sdk"
keywords = ["harmony", "protocol", "api", "chat", "client"]
categories = ["api-bindings"]
exclude = ["*.nix", "flake.lock", ".github/*"]

[workspace]
members = ["harmony_derive"]
resolver = "2"

[package.metadata.docs.rs]
all-features = true

[dependencies]
prost = "0.9"
derive-new = "0.5"
derive_more = "0.99"
http = "0.2"
hrpc = { version = "0.33", default-features = false }

harmony_derive = { version = "0.1.3", path = "harmony_derive", optional = true }
reqwest = { version = "0.11", default-features = false, features = [
	"json",
	"multipart",
], optional = true }
tracing = { version = "0.1", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
tokio = { version = "1.14", features = ["sync"], optional = true }

urlencoding = { version = "2.1", optional = true }
rkyv = { version = "0.7", optional = true }

[build-dependencies]
hrpc-build = { version = "0.33", default-features = false }
prost-build = "0.9"
regex = "1"
walkdir = "2"

[features]
# By default only harmonytypes is enabled (to prevent a build error)
default = ["gen_harmonytypes"]

# Enable the web WASM client
client_web = ["_client_common", "hrpc/http_wasm_client"]
# Enable the native client (uses `hyper`)
client_native = [
	"_client_common",
	"tokio",
	"hrpc/http_hyper_client",
	"reqwest/rustls-tls-native-roots",
]
# Internal feature used for common client features
_client_common = [
	# Harmony protocols enabled
	"gen_chat",
	"gen_auth",
	"gen_mediaproxy",
	"gen_harmonytypes",
	"gen_batch",
	"gen_profile",
	"gen_emote",
	"rest",
	# Generate client code
	"gen_client",
	"reqwest",
	"tracing",
	"urlencoding",
	"harmony_derive/client",
]
# Enable client backoff feature
client_backoff = []

# Generate client code for communication with the network
gen_client = ["hrpc/client", "hrpc-build/client"]
# Generate server code for communication with the network
gen_server = ["hrpc/server", "hrpc-build/server"]

# Enables all protocols
gen_all_protocols = ["gen_stable_protocols", "gen_staging_protocols"]

## Stable protocols ##
gen_chat = ["gen_harmonytypes", "gen_profile", "gen_emote"]
gen_auth = []
gen_mediaproxy = ["gen_harmonytypes"]
gen_harmonytypes = ["harmony_derive"]
gen_sync = []
gen_batch = []
gen_profile = []
gen_emote = []
rest = ["serde"]
# Enables all stable protocols
gen_stable_protocols = [
	"gen_chat",
	"gen_auth",
	"gen_mediaproxy",
	"gen_harmonytypes",
	"gen_sync",
	"gen_batch",
	"gen_profile",
	"gen_emote",
	"rest",
]

## Staging protocols ##
staging_gen_voice = []
staging_gen_bots = []
# Enables all staging protocols
gen_staging_protocols = ["staging_gen_voice", "staging_gen_bots"]

[dev-dependencies]
tokio = { version = "1.14", features = ["rt", "macros", "fs"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
ctrlc = "3.1.8"

[[example]]
name = "echo_bot"
required-features = ["client_native"]

[[example]]
name = "message_log"
required-features = ["client_native"]

[[example]]
name = "cmd_bot"
required-features = ["client_native"]

[package.metadata.nix]
build = true
library = true

[workspace.metadata.nix]
systems = ["x86_64-linux"]
