initSidebarItems({"mod":[["item_position","Nested message and enum types in `ItemPosition`."]],"struct":[["Anything","Anything holds anything"],["AnythingResolver","The resolver for an archived [`Anything`]"],["ArchivedAnything","An archived [`Anything`]"],["ArchivedEmpty","An archived [`Empty`]"],["ArchivedError","An archived [`Error`]"],["ArchivedHarmonyMethodMetadata","An archived [`HarmonyMethodMetadata`]"],["ArchivedItemPosition","An archived [`ItemPosition`]"],["ArchivedMetadata","An archived [`Metadata`]"],["ArchivedToken","An archived [`Token`]"],["Empty","An empty message"],["EmptyResolver","The resolver for an archived [`Empty`]"],["Error","Error type that will be returned by servers. "],["ErrorResolver","The resolver for an archived [`Error`]"],["HarmonyMethodMetadata","Metadata for methods. These are set in individual RPC endpoints and are typically used by servers."],["HarmonyMethodMetadataResolver","The resolver for an archived [`HarmonyMethodMetadata`]"],["ItemPosition","An object representing an item position between two other items."],["ItemPositionResolver","The resolver for an archived [`ItemPosition`]"],["Metadata","Metadata type used by many messages."],["MetadataResolver","The resolver for an archived [`Metadata`]"],["Token","Token that will be used for authentication."],["TokenResolver","The resolver for an archived [`Token`]"]]});