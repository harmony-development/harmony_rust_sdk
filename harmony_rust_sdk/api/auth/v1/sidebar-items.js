initSidebarItems({"mod":[["auth_service_client","Generated client implementations."],["auth_service_server","Generated server implementations."],["auth_step","Nested message and enum types in `AuthStep`."],["next_step_request","Nested message and enum types in `NextStepRequest`."]],"struct":[["AuthStep","AuthStep A step in the authentication process Contains a variety of different types of views It is recommended to have a fallback_url specified For non-trivial authentication procedures (such as captchas)"],["BeginAuthResponse","BeginAuthResponse The return type of BeginAuth, containing the auth_id that will be used for the authentication section"],["FederateReply","The reply to a successful federation request, containing the token you need to present to the foreign server."],["FederateRequest","The request to federate with a foreign server."],["KeyReply","Contains a key’s bytes."],["LoginFederatedRequest","Log into a foreignserver using a token from your homeserver, obtained through a FederateRequest"],["NextStepRequest","NextStepRequest contains the client’s response to the server’s challenge This needs to be called first with no arguments to receive the first step"],["Session","Session Session contains the information for a new session; the user_id you logged in as and the session_token which should be passed to authorisation"],["StepBackRequest","StepBackRequest A request to go back 1 step"],["StreamStepsRequest","StreamStepsRequest Required to be initiated by all authenticating clients Allows the server to send steps"],["TokenData","Information sent by a client’s homeserver, in a `harmonytypes.v1.Token`. It will be sent to a foreignserver by the client."]]});