name: Rust

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - '*.nix'
      - 'flake.lock'
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  compile-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@master

    - name: Install dependencies
      run: |
        sudo apt update -yy
        sudo apt install -yy --no-install-recommends protobuf-compiler protobuf-compiler-grpc

    - name: Cache Rust artifacts
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ./target
        key: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
        restore-keys: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}-

    - name: Check
      run: cargo check --all-targets --features client,gen_server --verbose
    - name: Clippy
      uses: actions-rs/clippy-check@v1.0.7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --features client,gen_server
    - name: Doc
      run: cargo doc --features client,gen_server --verbose
    - name: Build
      run: cargo build --all-targets --features client,gen_server --verbose

    - name: Fetch legato
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: main.yml
        workflow_conclusion: completed
        name: legato
        branch: main
        repo: harmony-development/legato

    - name: Configure legato
      run: |
        chmod +x ./legato
        ./legato
        sed -i -e 's/Password = ""/Password = "harmony"/g' -e 's/Username = ""/Username = "harmony"/g' config.hcl

    - name: Setup postgres
      uses: Harmon758/postgresql-action@v1
      with:
        postgresql db: harmony
        postgresql user: harmony
        postgresql password: harmony
  
    - name: Run legato
      run: ./legato &
    - name: Run tests
      run: cargo test --features client,gen_server --verbose
