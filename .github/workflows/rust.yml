name: Rust

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - '**/*.nix'
      - 'nix/envrc'
      - 'flake.lock'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - '**/*.nix'
      - 'nix/envrc'
      - 'flake.lock'

env:
  CARGO_TERM_COLOR: always

jobs:
  all:
    strategy:
      matrix:
        rust: ['1.55.0', '1.56.0']
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@master

    - name: Install dependencies
      run: |
        sudo apt update -yy
        sudo apt install -yy --no-install-recommends protobuf-compiler
    - name: Install rust
      run: rustup default ${{ matrix.rust }} && rustup component add rustfmt clippy

    - name: Cache rust
      uses: Swatinem/rust-cache@v1

    - name: Clippy default features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets
        name: "clippy(${{ matrix.rust }}): default"
    
    - name: Clippy default + client features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --features client
        name: "clippy(${{ matrix.rust }}): default + client"

    - name: Clippy all features
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --all-features
        name: "clippy(${{ matrix.rust }}): all"

    - name: Test all features
      if: ${{ matrix.rust == '1.53.0' }}
      run: RUST_LOG=debug cargo test --all-features --verbose

    - name: Doc
      if: ${{ matrix.rust == '1.53.0' }}
      run: cargo doc --no-deps --all-features --verbose

    - name: Finalize documentation
      if: ${{ github.ref == 'refs/heads/master' && matrix.rust == '1.53.0' && github.event_name == 'push' }}
      run: |
        CRATE_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]' | cut -f2 -d"/")
        echo "<meta http-equiv=\"refresh\" content=\"0; url=${CRATE_NAME/-/_}\">" > target/doc/index.html
        touch target/doc/.nojekyll

    - name: Publish docs
      if: ${{ github.ref == 'refs/heads/master' && matrix.rust == '1.53.0' && github.event_name == 'push' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/doc/
        publish_branch: gh-pages

    - name: Trigger integration testing
      if: ${{ github.ref == 'refs/heads/master' && matrix.rust == '1.53.0' && github.event_name == 'push' }}
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.INTEGRATION_TEST_PAT }}
        repository: harmony-development/integration-testing
        event-type: dep-updated